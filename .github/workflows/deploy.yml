name: Deploy FacNet Validator
# Manual deployment trigger to restart PM2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Production VPS
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ubuntu
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          sudo -u facnet bash -c '
          set -euo pipefail  # Exit on error, undefined vars, pipe failures

          cd /var/www/facnet/app

          echo "=== 1. Git Pull Latest Code ==="
          if [ ! -d ".git" ]; then
            echo "Initializing git repository..."
            git init
            git remote add origin https://github.com/montignypatrik/facnet-validator.git
            git fetch origin
            git checkout -b main origin/main
          else
            git fetch origin
            git reset --hard origin/main
            echo "Latest commit: $(git log -1 --oneline)"
          fi

          echo "=== 2. Clean Build Directory ==="
          rm -rf dist/

          echo "=== 3. Install Dependencies ==="
          npm ci

          echo "=== 4. Build Application ==="
          npm run build

          echo "=== 5. Verify Build Artifacts ==="
          if [ ! -f "dist/server/index.js" ]; then
            echo "ERROR: Build failed - dist/server/index.js not found"
            exit 1
          fi
          echo "✓ Server bundle: $(ls -lh dist/server/index.js | awk '\''{print $5}'\'')"

          echo "=== 6. Run Database Migrations ==="
          npm run db:push || echo "Warning: No migrations needed"

          echo "=== 7. Stop PM2 Processes (Graceful) ==="
          if /usr/bin/pm2 describe facnet-validator >/dev/null 2>&1; then
            /usr/bin/pm2 stop facnet-validator
            sleep 3
            /usr/bin/pm2 delete facnet-validator || true
          fi

          echo "=== 8. Start Fresh PM2 Processes ==="
          /usr/bin/pm2 start ecosystem.config.cjs
          /usr/bin/pm2 save

          echo "=== 9. Wait for Cluster Stabilization ==="
          sleep 15

          echo "=== 10. Verify All Workers Running ==="
          ONLINE_COUNT=$(/usr/bin/pm2 jlist | jq "[.[] | select(.name==\"facnet-validator\" and .pm2_env.status==\"online\")] | length")
          if [ "$ONLINE_COUNT" -lt 1 ]; then
            echo "ERROR: PM2 processes failed to start"
            /usr/bin/pm2 logs facnet-validator --lines 50
            exit 1
          fi
          echo "✓ $ONLINE_COUNT workers online"

          echo "=== 11. Health Check (STRICT) ==="
          if ! curl -f -m 10 http://localhost:5000/api/health; then
            echo "ERROR: Health check failed"
            /usr/bin/pm2 logs facnet-validator --lines 50
            exit 1
          fi
          echo "✓ Health check passed"

          echo "=== 12. Deployment Success ==="
          /usr/bin/pm2 status facnet-validator
          '

    - name: Verify deployment
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ubuntu
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          # Check if application is responding
          sleep 10
          curl -f -k https://148.113.196.245 > /dev/null && echo "✅ Application is responding" || echo "❌ Application is not responding"

          # Check PM2 status as facnet user
          sudo -u facnet pm2 status facnet-validator